// Syntax definition: https://pest.rs/book/grammars/syntax.html

WS      = _{ " " | "\t" | COMMENT }
COMMENT = _{ (("//" ~ (!NEWLINE ~ ANY)* ~ (NEWLINE | EOI)) | ("/*" ~ ("/**/" | (!"*/" ~ ANY))* ~ "*/")) }
IGNORED = _{ (WS | NEWLINE) }

unquoted_value_str    = ${ (ASCII_ALPHANUMERIC | "_" | "-" | "$" | ".")+ }
unquoted_selector_str = ${ (ASCII_ALPHANUMERIC | "_" | "-" | "$")+ }
single_quote_str      = ${ ("\\'" | (!"'" ~ ANY))* }
ignored_single_quotes = _{ PUSH("'") ~ single_quote_str ~ POP }
double_quote_str      = ${ ("\\\"" | (!"\"" ~ ANY))* }
ignored_double_quotes = _{ PUSH("\"") ~ double_quote_str ~ POP }
value_str             = ${ ignored_single_quotes | ignored_double_quotes | unquoted_value_str }
selector_str          = ${ ignored_single_quotes | ignored_double_quotes | unquoted_selector_str }

lparen = _{ "(" }
rparen = _{ ")" }
lbrace = _{ "{" }
rbrace = _{ "}" }
semi   = _{ ";" }
colon  = _{ ":" }
comma  = _{ "," }
dot    = _{ "." }
eq     = _{ "=" }

constrain =  _{ "@constrain" }
context   =  _{ "@context" }
import    =  _{ "@import" }
override  =  _{ "@override" }

prop_value = @{ value_str }

simple_prop_def         =  { selector_str ~ IGNORED* ~ eq ~ IGNORED* ~ prop_value ~ IGNORED* }
left_override_prof_def  = _{ override ~ IGNORED+ ~ simple_prop_def }
right_override_prof_def = _{ simple_prop_def ~ IGNORED+ ~ override }
overridden_prop_def     =  { left_override_prof_def | right_override_prof_def }

prop_def = { simple_prop_def | overridden_prop_def }

key                =  { selector_str ~ key_value? }
key_value          =  { IGNORED* ~ dot ~ IGNORED* ~ selector_str }

selector           = ${ selector_component ~ (infix ~ selector_component)* ~ IGNORED* }
infix              = _{ conjunction | disjunction }
conjunction        = ${ IGNORED+ }
disjunction        = ${ IGNORED* ~ comma ~ IGNORED* }
selector_component = ${ selector_def | selector_group }
selector_def       = ${ key }
selector_group     = _{ lparen ~ IGNORED* ~ selector ~ IGNORED* ~ rparen }

ctx_def        = { WS* ~ selector ~ IGNORED* ~ colon ~ IGNORED* ~ (prop_def | constrain_stmt) }
ctx_block      = { WS* ~ selector ~ IGNORED* ~ block }
block          = _{ IGNORED* ~ lbrace ~ IGNORED* ~ block_stmt* ~ IGNORED* ~ rbrace }

// TODO: Why do we need it to be parenthesized? Test ambiguity with following selector
context_stmt   = { context ~ WS* ~ selector_group ~ semi* }
constrain_stmt = { constrain ~ WS+ ~ selector_def ~ WS* ~ semi* }
import_stmt    = { import ~ WS+ ~ value_str ~ WS* ~ semi* }

block_stmt     = _{ IGNORED* ~ (ctx_def | ctx_block | prop_def | import_stmt | constrain_stmt) ~ IGNORED* ~ semi* }
file_contents  = { (IGNORED* ~ context_stmt? ~ IGNORED* ~ block_stmt ~ IGNORED*)* }
file           = _{ SOI ~ file_contents ~ EOI }
